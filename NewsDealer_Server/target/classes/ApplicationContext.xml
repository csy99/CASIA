<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 加载配置文件 -->
	<!-- 采用classpath在打jar包之后只能读取jar包内配置文件 -->
<!-- 	<context:property-placeholder -->
<!-- 	location="classpath:db.properties" /> -->
	<!-- 配置在服务器上用绝对路径读取文件 -->
	<context:property-placeholder
		ignore-unresolvable="true" location="file:${user.dir}/conf/db.properties" />

	<!-- 数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.pwd}" />
	</bean>

	<bean id="configBean" class="casia.isiteam.config.Config">
		<property name="batch_size" value="${batch_size}"></property>
		<property name="total_size" value="${total_size}"></property>
		<property name="start_idx" value="${start_idx}"></property>
	</bean>


	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatisConfig.xml"></property>
	</bean>

	<bean id="RNewsDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="casia.isiteam.dao.RNewsDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>

	<!-- RMI配置 -->
	<bean id="RNewsDaoImp" class="casia.isiteam.dao.RNewsDaoImp"
		scope="prototype" />
	<bean id="serviceExporter" class="org.springframework.remoting.rmi.RmiServiceExporter">
		<!-- 将远程接口实现类对象设置到RMI服务中 -->
		<property name="service" ref="RNewsDaoImp" />
		<!-- 设置RMI服务名，为RMI客户端依据此服务名获取远程接口实现类对象引用奠定基础 -->
		<property name="serviceName" value="rnewsdao" />
		<!-- 将远程接口设置为RMI服务接口 -->
		<property name="serviceInterface" value="casia.isiteam.dao.RNewsDao" />
		<!-- 为RMI服务端远程对象注册表设置端口号 -->
		<property name="registryPort" value="2000" />
	</bean>
</beans>  


